language: cpp
services:
- xvfb
git:
  depth: false
install:
  - echo "clone lib2geom"
  - git clone https://gitlab.com/inkscape/lib2geom.git
  - pushd lib2geom
  - git checkout 37876ed4
  - popd
  - echo "configure lib2geom"
  - cmake -B build-lib2geom -S lib2geom -GNinja -D2GEOM_TESTING=OFF
  - cmake --build build-lib2geom --target install
jobs:
  include:
  - stage: build
    os: linux
    dist: xenial
    name: Build on Ubuntu Xenial
    before_install:
    - sudo apt-get clean
    - sudo apt-get remove -y mysql-client-5.7 mysql-server-5.7
    - sudo apt-add-repository -y ppa:deadsnakes/ppa
    - sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
    - sudo apt-add-repository -y ppa:beineri/opt-qt-5.12.3-xenial
    - sudo apt-get update -y -qq
    - sudo apt-get install -y g++8
    - sudo apt-get install -y qt512tools
    - sudo apt-get install -y qt512translations
    - sudo apt-get install -y qt512svg
    - sudo apt-get install -y qt512base
    - sudo apt-get install -y qt512imageformats
    - sudo apt-get install -y python3.7
    - sudo apt-get install -y ninja-build zlib1g-dev libssl-dev libffi-dev libgl-dev libboost-all-dev
    - sudo apt-get install -y libdouble-conversion-dev libgsl-dev libcairo2-dev libpoppler-qt5-dev
    - sudo apt-get install -y libkf5itemmodels-dev imagemagick
    - https://github.com/Kitware/CMake/releases/download/v3.14.7/cmake-3.14.7-Linux-x86_64.sh
    - sudo ./cmake-3.14.7-Linux-x86_64.sh --skip-license --prefix=/usr
    - export CXX_COMPILER=g++8
    - export C_COMPILER=gcc-8
    - export QT_PREFIX="/opt/qt512"
    - export QT_QM_PATH="/opt/qt512/translations/"
    - export PATH="/opt/qt512/bin:$PATH"
    after_success:
    - build-scripts/make-appimage.sh
  - stage: build
    os: linux
    dist: bionic
    name: Build on Ubuntu Bionic
    before_install:
    - sudo apt-get clean
    - sudo apt-get remove -y mysql-client-5.7 mysql-server-5.7
    - sudo apt-add-repository -y ppa:deadsnakes/ppa
    - sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
    - sudo apt-add-repository -y ppa:beineri/opt-qt-5.12.3-bionic
    - sudo apt-get update -y -qq
    - sudo apt-get install -y g++8
    - sudo apt-get install -y qt512tools
    - sudo apt-get install -y qt512translations
    - sudo apt-get install -y qt512svg
    - sudo apt-get install -y qt512base
    - sudo apt-get install -y qt512imageformats
    - sudo apt-get install -y python3.7
    - sudo apt-get install -y ninja-build zlib1g-dev libssl-dev libffi-dev libgl-dev libboost-all-dev
    - sudo apt-get install -y libdouble-conversion-dev libgsl-dev libcairo2-dev libpoppler-qt5-dev
    - sudo apt-get install -y libkf5itemmodels-dev imagemagick
    - https://github.com/Kitware/CMake/releases/download/v3.14.7/cmake-3.14.7-Linux-x86_64.sh
    - sudo ./cmake-3.14.7-Linux-x86_64.sh --skip-license --prefix=/usr
    - export CXX_COMPILER=g++8
    - export C_COMPILER=gcc-8
    - export QT_PREFIX="/opt/qt512"
    - export QT_QM_PATH="/opt/qt512/translations/"
    - export PATH="/opt/qt512/bin:$PATH"
  - stage: build
    os: linux
    dist: focal
    name: Build on Ubuntu Focal with GCC
    before_install:
    - sudo apt-get clean
    - sudo apt-get remove mysql-client-5.7 mysql-server-5.7
    - sudo apt-get update -y -qq
    - sudo apt-get install -y
        g++ gcc cmake qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools qt5-default
        libqt5svg5-dev qttools5-dev qttranslations5-l10n qttools5-dev ninja-build zlib1g-dev
        libssl-dev libffi-dev libgl-dev python3-dev libboost-all-dev libdouble-conversion-dev
        libgsl-dev libcairo2-dev libpoppler-qt5-dev libkf5itemmodels-dev imagemagick
    - export CXX_COMPILER=g++
    - export C_COMPILER=gcc
    - export QT_PREFIX=""
    - export QT_QM_PATH="/usr/share/qt5/translations/"
  - stage: build
    os: linux
    dist: focal
    name: Build on Ubuntu Focal with Clang
    before_install:
    - sudo apt-get clean
    - sudo apt-get remove mysql-client-5.7 mysql-server-5.7
    - sudo apt-get update -y -qq
    - sudo apt-get install -y
        clang cmake qtbase5-dev qtchooser qt5-qmake qtbase5-dev-tools qt5-default
        libqt5svg5-dev qttools5-dev qttranslations5-l10n qttools5-dev ninja-build zlib1g-dev
        libssl-dev libffi-dev libgl-dev python3-dev libboost-all-dev libdouble-conversion-dev
        libgsl-dev libcairo2-dev libpoppler-qt5-dev libkf5itemmodels-dev imagemagick
    - export CXX_COMPILER=clang++
    - export C_COMPILER=clang
    - export QT_PREFIX=""
    - export QT_QM_PATH="/usr/share/qt5/translations/"
  - stage: build
    os: linux
    dist: focal
    name: Check Format
    addons:
      apt:
        update: true
        packages:
        - clang
    before_install:
    install:
    - sudo apt-get install -y clang-format-10
    script:
    - clang-format --version
    - ln -s /usr/bin/clang-format-10 clang-format
    - PATH=$(pwd):$PATH build-scripts/format.sh check
script:
- cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DQT_QM_PATH="$QT_QM_PATH" -DCMAKE_PREFIX_PATH="$QT_PREFIX" -S . -B build
- cmake --build build --target package
after_script:
- build-scripts/notify-telegram.sh
notifications:
  webhooks:
    urls:
    - https://webhooks.gitter.im/e/9931d1c2db52be0aa323
    on_success: change
    on_failure: always
    on_start: never
branches:
  except:
  - # Do not build tags that we create when we upload to GitHub Releases
  - /^(?i:continuous)/

# deploy:
#   provider: releases
#   api_key:
#     secure: LmZaJBVmy3lTvPO7bEBIf961wyaRI4y+A/3IpHnr9NmDtFg3crmvMsAxI1SEsBWsWHTjG/B4bCjQglfDryBd/7RJ5VAuQQJgnM/yYh5ft1ijzoh88HOUA/+gndwMSz6esaaUyt1y6I23dQzXdkHo0M1IrAqApbw42d4+u1kyRazz0PgzgVuMmosj2rpeGiIpXMRR452QyH6LkXosc5/rYjcAQGDRJxQeAYAeuf6JslqVidUqGNtHX1ZhZeAAx7L7H+Vc0bzxtNSCz7ogQlTr7/nS1O0AufAITBjt7uAiapJ5CEBlpUbwY5tI+NXmSDDHx4xqhuL2bL02rQevul3HL0mCwH2Vv8js2ktrVwq3QvNZAQkuTfRjI6pUG5ES89jezQcOejZilklL6YaGMT9ACPgMAexfFV02FRyZ61qDE9z6RXiJQbSHjL7t8lyoKIunw7FmJ4pgqo8UYUYJHjNmx9Kd+ttlHq6w6kZeXgMGOxVYb0SZa3AH0MDwQE74RnhJJ5N0jPMmyQMGKJ+ZfwdUq4hYu+simbiyL6RlvN9mjWsU4tE8V1rj0Xg0lbm1hnONjoJw9+kWDTM+vmvMB3Dkuuauv8OuI0TiBgrG0a+Cv2N4Tc5nFOBdVjZzviiX6If9NXPRSw3jWdXZZwqbxXnj5S7IPvCFKgTV4ML4Jpi9jKQ=
#   file:
#   - build/ommpfritt
#   - build/ommpfritt.exe
#   - build/ommpfritt-0.1.0-win64.exe
#   - build/ommpfritt-0.1.0-Linux.sh
#   on:
#     repo: pasbi/ommpfritt
#   skip_cleanup: 'true'
