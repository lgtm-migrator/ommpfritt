name: focal, clang, static tests, unit tests
on: [push]
jobs:
  configure:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-common-packages
        with:
          additional_packages:
            clang
            libkf5itemmodels-dev
            libpoppler-qt5-dev
            libqt5svg5-dev
            qt5-default
            qtbase5-dev
            qtchooser
            qttools5-dev-tools
            qttools5-dev
      - uses: ./.github/actions/install-from-git
        with:
          url: https://gitlab.com/inkscape/lib2geom.git
          checkout: 37876ed4
          configure_flags: -D2GEOM_TESTING=OFF
      - run: cmake -S .
                   -B build
                   -GNinja
                   -DCMAKE_BUILD_TYPE=Release
                   -DCMAKE_PREFIX_PATH=dependencies
                   -DBUILD_TESTING=ON
                   -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
                   -DCMAKE_CXX_COMPILER=clang++
                   -DCMAKE_C_COMPILER=clang
      - uses: actions/upload-artifact@v2
        with:
          name: configure
          path: |
            build
            dependencies
  build:
    needs: configure
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-common-packages
        with:
          additional_packages:
            clang
            libkf5itemmodels-dev
            libpoppler-qt5-dev
            libqt5svg5-dev
            qt5-default
            qtbase5-dev
            qtchooser
            qttools5-dev-tools
            qttools5-dev
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: configure
      - run: cmake --build build
                   --config Release
                   -j4
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            build
            dependencies
  clazy:
    runs-on: ubuntu-20.04
    needs: configure
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-common-packages
        with:
          additional_packages: clazy
      - uses: actions/download-artifact@v2
        with:
          name: configure
      - run: |
          files="$(build-scripts/files.py --mode changed)"
          if [ -z "$files" ]; then
            echo "Skip clazy: No relevant files have changed."
          else
            clazy --standalone -p build --ignore-included-files $files
          fi
  clang-tidy:
    runs-on: ubuntu-20.04
    needs: configure
    steps:
      - uses: actions/checkout@v2
      - uses: ./.github/actions/install-common-packages
      - uses: actions/download-artifact@v2
        with:
          name: configure
      - run: |
          files="$(build-scripts/files.py --mode changed)"
          if [ -z "$files" ]; then
            echo "Skip clang-tidy: No relevant files have changed."
          else
            clang-tidy -p build $(build-scripts/files.py --mode changed) $files
          fi
  unit-tests:
    runs-on: ubuntu-20.04
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build
      - run: ls /home/runner/work/ommpfritt/ommpfritt/build/
      - run: ls /home/runner/work/ommpfritt/ommpfritt/build/test/unit/
      - run: ls /home/runner/work/ommpfritt/ommpfritt/build/test/unit/color
      - run: ctest --test-dir build --output-on-failure
